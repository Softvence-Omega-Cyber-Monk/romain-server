
model Level{
  id        String   @id @default(uuid())
  name      String
  programmeId   String
  programme     Programme        @relation(fields: [programmeId], references: [id])  

  createdAt DateTime
  updatedAt DateTime @updatedAt

  Student Student[]

  LevelFee LevelFee[]
}


// 4. FeeType (What is the charge?)
model FeeType {
  id              String    @id @default(uuid())
  name            String    // e.g., "Tuition Fee", "Canteen Fee", "Additional Fee"
  description     String?


  institutionId   String
  institution     Institution @relation(fields: [institutionId], references: [id])

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  levelFees       LevelFee[] // Relationship to the join table
}

// 5. LevelFee (The Price Setting / Configuration)
// This model defines the specific, static price for a FeeType on a Level.
model LevelFee {
  // Composite ID for the primary key (PK)
  levelId         String
  feeTypeId       String
  
  @@id([levelId, feeTypeId])
  
  // The actual fixed price for this category in this class
  amount          Decimal     @default(0) 
  
  // Relationships
  level           Level     @relation(fields: [levelId], references: [id])
  feeType         FeeType   @relation(fields: [feeTypeId], references: [id])
  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  studentDebts    StudentDebt[] // Links to individual student debt items
}