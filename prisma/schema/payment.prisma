model Payment {
  id                String    @id @default(uuid())
  amount            Decimal
  commissionRate    Decimal   @default(0.05) // The 5% rule
  commissionAmount  Decimal   // Calculated (amount * 0.05)
  netAmount         Decimal   // Final amount for the school
  
  transactionRef    String? // Mooney transaction reference
  transactionDate   DateTime

  // Link to the student who paid
  studentId         String
  student           Student @relation(fields: [studentId], references: [id])
  
  paymentStatus     PaymentStatus 

  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

enum PaymentStatus {
  PENDING
  PAID_TO_PLATFORM  // Money received (Day D)
  READY_FOR_PAYOUT  // Day D+3 reached
  PAID_TO_SCHOOL    // Disbursement complete
}